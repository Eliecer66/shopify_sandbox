{% # SECTION: Getting Assets %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer> </script>
<script src="{{ "variant-selector.js" | asset_url }}" defer ></script>
<script src="{{ "quantity-element.js" | asset_url }}" defer ></script>
{{ 'swiper.css' | asset_url | stylesheet_tag }}

{% # SECTION: Constants %}
{% assign selected_variant = product.selected_or_first_available_variant %}
{% # INFO:: This is a varable to store metafileds data, in this case the media gallery %}
{% assign meta_gallery = product.metafields.custom.media_gallery.value %}

{% # ============================ | HTML | =================================== %}

<div class="max-w-6xl mx-auto my-8 mt-20" >
  <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
    <div class="relative">
      <div class="product--information">
        <div class="flex md:hidden justify-center w-full absolute left-0 top-14 z-10">
          <h2
            style="font-size: 24px"
            class="text-gray-700 "
            >
            {{ product.title }}
          </h2>
        </div>
        <div class="swiper mySwiper2 ">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-full overflow-hidden p-2 flex justify-center">
                  {% render "product-media", media: media%}
                </div>
              </div>
            {% endfor %}
          </div>
            <div class="swiper-pagination"></div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
        </div>
        <div thumbsSlider="" class="swiper mySwiper">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <img
                width="auto"
                height="auto"
                src="{{ media | image_url }}"
                />
              </div>
            {% endfor%}
          </div>
        </div>
      </div>
      {% if meta_gallery != blank %}
        <div class="hidden md:block">
          {% for media in meta_gallery %}
            <div class="h-100 overflow-hidden p-2">
              {% render "product-media", media: media %}
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    <div class="product--information sticky top-5 p-2">
      {% form "product", product, id: "product-form", novalidate: "novalidate" %}
      <input type="hidden" name="id" value={{ selected_variant.id }}>
      {% for block in section.blocks %}
        <div class="flex flex-col justify-evenly items-start h-full w-full gap-4">
          {% case block.type %}
            {% when "vendor" %}
              <div class="my-3 flex justify-center w-full">
                <span class="text-gray-700"> {{ product.vendor }} </span>
              </div>
            {% when "title" %}
              <div class=" hidden md:flex my-3 justify-center w-full">
                <h2
                  style="font-size: {{ block.settings.font_size }}px"
                  class="text-gray-700 "
                >
                  {{ product.title }}
                </h2>
              </div>
            {% when "price" %}
              <div
                class="my-3 flex justify-center gap-2 items-center w-full h-full p-2 "
                id="price-{{ section.id }}"
              >
                <span class="text-2xl text-gray-500 line-through" >{{ selected_variant.compare_at_price | money }} </span>
                <span class="text-3xl text-gray-900" >{{ selected_variant.price | money }} </span>
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-gray-800 rounded-full text-white mx-4" >Sale</span>
                {% endif %}
              </div>
              {% when "ralationated_products" %}
                {% if product.metafields.custom.relationated_products.value != blank%}
                  <div class="w-full flex justify-center">
                    <p class="text-xl text-gray-600 "> {{ block.settings.ralationated_products }} </p>
                  </div>
                  <div class="flex w-full justify-center" >
                    {% # NOTE: Because of we use relationated products in another part it is needed to limit in this section %}
                    {% for relationated in product.metafields.custom.relationated_products.value limit: 3 %}
                      <a
                        href="{{ relationated.url }}"
                      >
                        <img
                          src="{{ relationated.featured_image | image_url }}"
                          width="auto"
                          height="auto"
                          class="w-20 h-20"
                        />
                      </a>
                      {% endfor %}
                  </div>
                {% endif %}
            {% when "variant_selector" %}
              <div class="my-3 w-full" >
                {% unless product.has_only_default_variant %}
                  <variant-selector
                    variant-element
                    data-url="{{ product.url }}"
                    data-section="{{ section.id }}"
                    class="flex flex-col items-start gap-4"
                  >
                    {% for option in product.options_with_values %}
                      {% if option.name == "Color" %}
                        <div class="flex flex-col gap-2 w-full">
                          <label
                            id="{{ option.name | escape }}"
                            name="{{ option.name }}"
                            class="text-lg "
                            for="Option-{{ section.id }}-{{ forloop.index0 }}"
                          >
                            {{ option.name }}: {{ option.selected_value }}
                          </label>
                          <div class="flex gap-2">
                            {% for color in option.values %}
                              <input
                                id="{{ color.id }}"
                                type="radio"
                                name="color-selected"
                                value="{{ color.name }}"
                                class="sr-only peer"
                                {% if color.selected %}
                                  checked
                                {% endif %}
                              >
                              <label
                                for="{{ color.id }}"
                                class="w-8 h-8 rounded-full border border-gray-300 cursor-pointer transition"
                                style="background-color: {{ color.swatch.color }};"
                                title="{{ color.swatch.color }}"
                              >
                                <span class="sr-only">{{ color.name }}</span>
                              </label>
                            {% endfor %}
                          </div>
                        </div>
                        {% else %}
                          <label
                            id="{{ option.name | escape }}"
                            name="{{ option.name }}"
                            class="text-lg "
                            for="Option-{{ section.id }}-{{ forloop.index0 }}"
                          >
                            {% assign path = "asset.variants." %}
                            {{ option.name | prepend: path | downcase | replace_first: ' ', '_'| t }} : {{ option.selected_value }}
                          </label>
                          <div class="my-2 w-full" >
                            <select
                              name="options[{{ option.name | escape }}]"
                              id="Option-{{ section.id }}-{{ forloop.index0 }}"
                              class="w-full border px-3 py-1"
                            >
                              {% for value in option.values %}
                                <option
                                  value="{{ value | escape }}"
                                  {% if option.selected_value == value %}
                                    selected="selected"
                                  {% endif%}
                                >
                                  {{ value }}
                                </option>
                              {% endfor %}
                            </select>
                          </div>
                        {% endif%}
                      {% endfor %}
                      <script type="application/json" >
                        {{ product.variants | json }}
                      </script>
                  </variant-selector>
              {% endunless %}
              </div>
            {% when "quantity" %}
              <quantity-element
                class="my-3 flex flex-col w-full items-center text-xl text-gray-700"
              >
                <label
                  for="quantity-{{ section.id }}"
                >
                  {{ "asset.variants.quantity" | t }}
                </label>
                <div
                  class="flex my-2 border-2 border-gray-400 max-w-40 justify-center"
                >
                  <button
                    name="minus"
                    type="button"
                    class="p-4 text-lg"
                  >
                    -
                  </button>
                  <input
                    class="w-full flex text-center text-lg"
                    type="number"
                    name="quantity"
                    id="quantity-{{ section.id }}"
                    value="1"
                    min="1"
                  >
                  <button
                    name="plus"
                    type="button"
                    class="p-4 text-lg"
                  >
                    +
                  </button>
                </div>
              </quantity-element>
            {% when "stock" %}
              <div
                data-stock-content
                id="stock_variant"
                class="flex w-full justify-center"
              >
                {% render "product-stock", variants: product.variants %}
              </div>
            {% when "description" %}
              <div class="my-3">
                <p class="text-gray-600 text-xl/8">
                {{ product.description }}
                </p>
              </div>
            {% when "checkout_buttons" %}
              <div class="flex justify-center w-full my-3">
                <div class="w-full">
                  <button
                    type="submit"
                    name="add"
                    class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounde-sm my-2"
                    {% if product.selected_or_first_available_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                    {% if product.selected_or_first_available_variant.available == false %}
                      {{ "cart.checkout.button_description_sold_out" | t }}
                    {% else %}
                      {{ "cart.checkout.button_description_add" | t }}
                    {% endif %}
                  </button>
                </div>
              </div>
            {% else %}
          {% endcase %}
        </div>
      {% endfor %}
      {% endform %}
    </div>
  </div>
  {% if product.metafields.custom.relationated_products.value != blank %}
    <div class="mt-12">
      <h3
        class="text-3xl text-gray-700 p-4"
      >
        {{ "asset.variants.relationated_products_title" | t }}
      </h3>
      <div class="flex md:flex-row flex-col justify-evenly">
        {% for items in product.metafields.custom.relationated_products.value %}
          <a
            href="{{ items.url }}"
            class="flex flex-col items-center justify-center"
          >
            <img
              src="{{ items.featured_image | image_url }}"
              width="auto"
              height="auto"
              class="object-cover transition duration-1000 ease-in-out transform hover:scale-105 w-56 h-auto"
            />
            <p class="text-gray-700">{{ items.title }}</p>
            <div
              class="text-gray-700 flex gap-2 items-center"
              >
              <span
                class="line-through text-sm"
              >
                {{ items.compare_at_price | money }}
              </span>
              <span>{{ items.price | money }}</span>
            </div>
          </a>
        {% endfor %}
      </div>
    </div>
  {% endif %}
</div>

{% # ========================== | SCHEMA | ================================== %}

{% schema %}
  {
    "name":"Product",
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },{
        "type": "price",
        "name": "Price",
        "limit": 1
      },{
        "type": "title",
        "name": "Title",
        "limit": 1,
        "settings": [
          {
            "id": "font_size",
            "type": "range",
            "min": 20,
            "max": 100,
            "unit": "px",
            "label": "Size",
            "default": 40,
            "step": 10
          }
        ]
      },{
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      },{
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "checkout_buttons",
        "name": "Checkout Buttons",
        "limit": 1
      }, {
        "type": "ralationated_products",
        "name": "Relationated products",
        "limit": 1,
        "settings": [
          {
            "type": "text",
            "id": "ralationated_products",
            "label": "Variant Title",
            "default": "Also Comes In: "
          }
        ]
      },{
        "type": "stock",
        "name": "Stock",
        "limit": 1
      }
    ]
  }
  {% endschema %}


{% # ============================= | AUX | =================================== %}

{% # NOTE:  This add functionality to the swiper element %}
<script>
  document.addEventListener("DOMContentLoaded", function() {
    try {
      const swiper = new Swiper(".mySwiper", {
        spaceBetween: 9,
        slidesPerView: 4,
        freeMode: true,
        watchSlidesProgress: true,
      });
      var swiper2 = new Swiper(".mySwiper2", {
        spaceBetween: 9,
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
        thumbs: {
          swiper: swiper,
        },
      });
    } catch {
      console.log("Swiper is not defined ")
    }
  })
</script>

{% # NOTE: This to console.log data %}
<script>
  console.log(JSON.parse(document.querySelector("[metafields-data]").textContent))
</script>

